version: '3.8'

services:
  no-fluxo-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: no-fluxo-backend
    # No ports exposed - nginx handles external traffic
    environment:
      - NODE_ENV=production
      - PORT=3325
    env_file:
      - .env
    volumes:
      # Mount source code but preserve container's compiled output
      - ./src:/app/src
      - ./AI-agent:/app/AI-agent
      - ./parse-pdf:/app/parse-pdf
      - ./scripts:/app/scripts
      - ./package.json:/app/package.json:ro
      - ./package-lock.json:/app/package-lock.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./nodemon.json:/app/nodemon.json:ro
      - ./requirements.txt:/app/requirements.txt:ro
      - ./requirements_monitor.txt:/app/requirements_monitor.txt:ro
      - ./docker-entrypoint.sh:/app/docker-entrypoint.sh:ro
      - ./start_and_monitor.py:/app/start_and_monitor.py:ro
      # Persist the fork repository across container restarts
      - fork_data:/app/fork_repo
      # Use Docker volume for logs to maintain proper permissions
      - logs_data:/app/logs
      # Use Docker volume for compiled output to maintain proper permissions
      - dist_data:/app/dist
      # Python local packages directory
      - python_local:/app/.local
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3325/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - no-fluxo-network

  nginx:
    image: nginx:alpine
    container_name: no-fluxo-nginx
    ports:
      - "80:80"       # HTTP (for redirects)
      - "443:443"     # Main backend HTTPS (standard port)
      - "4652:4652"   # AI Agent HTTPS  
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      # Mount your actual Let's Encrypt certificates
      - /etc/letsencrypt/live/no-fluxo-api.shop/fullchain.pem:/etc/ssl/certs/cert.pem:ro
      - /etc/letsencrypt/live/no-fluxo-api.shop/privkey.pem:/etc/ssl/private/key.pem:ro
    depends_on:
      - no-fluxo-backend
    restart: unless-stopped
    networks:
      - no-fluxo-network

networks:
  no-fluxo-network:
    driver: bridge

volumes:
  fork_data:
    driver: local
  logs_data:
    driver: local
  dist_data:
    driver: local
  python_local:
    driver: local 