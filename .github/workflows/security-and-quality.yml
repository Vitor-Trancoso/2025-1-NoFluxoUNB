name: Security and Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Executa semanalmente Ã s 2h da manhÃ£ de domingo
    - cron: '0 2 * * 0'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: no_fluxo_backend/package-lock.json
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Node.js dependencies
      run: |
        cd no_fluxo_backend
        npm ci
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests-python/requirements.txt
        pip install bandit safety
        
    - name: Run npm audit
      run: |
        cd no_fluxo_backend
        npm audit --audit-level=moderate
        
    - name: Run safety check for Python
      run: |
        safety check --json --output safety-report.json || true
        
    - name: Run bandit security scan
      run: |
        bandit -r tests-python/ -f json -o bandit-report.json || true
        
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          safety-report.json
          bandit-report.json

  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: no_fluxo_backend/package-lock.json
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        cd no_fluxo_backend
        npm ci
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
        
    - name: Run ESLint with detailed output
      run: |
        cd no_fluxo_backend
        npm run lint -- --format=json --output-file=eslint-report.json || true
        
    - name: Run TypeScript strict check
      run: |
        cd no_fluxo_backend
        npx tsc --noEmit --strict --noImplicitAny --noImplicitReturns --noUnusedLocals --noUnusedParameters
        
    - name: Run Python linting
      run: |
        flake8 tests-python/ --format=json --output-file=flake8-report.json || true
        
    - name: Check Python code formatting
      run: |
        black --check --diff tests-python/ || true
        
    - name: Check Python imports
      run: |
        isort --check-only --diff tests-python/ || true
        
    - name: Run mypy type checking
      run: |
        mypy tests-python/ --json-report mypy-report.json || true
        
    - name: Upload quality reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: quality-reports
        path: |
          no_fluxo_backend/eslint-report.json
          flake8-report.json
          mypy-report.json

  dependency-updates:
    runs-on: ubuntu-latest
    name: Dependency Updates Check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Check for outdated npm packages
      run: |
        cd no_fluxo_backend
        npm outdated --json > npm-outdated.json || echo '{}' > npm-outdated.json
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Check for outdated Python packages
      run: |
        pip install pip-review
        pip-review --format=json > pip-outdated.json || echo '{}' > pip-outdated.json
        
    - name: Upload dependency reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: dependency-reports
        path: |
          no_fluxo_backend/npm-outdated.json
          pip-outdated.json

  quality-summary:
    runs-on: ubuntu-latest
    needs: [security-scan, code-quality, dependency-updates]
    name: Quality Summary
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all reports
      uses: actions/download-artifact@v3
      with:
        path: reports
        
    - name: Generate quality summary
      run: |
        echo "## Security and Code Quality Summary" >> $GITHUB_STEP_SUMMARY
        echo "### Security Scan" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Security scan completed" >> $GITHUB_STEP_SUMMARY
        echo "### Code Quality" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Code quality checks completed" >> $GITHUB_STEP_SUMMARY
        echo "### Dependency Updates" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Dependency update check completed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "ðŸ“Š Detailed reports available in the Actions artifacts" >> $GITHUB_STEP_SUMMARY 